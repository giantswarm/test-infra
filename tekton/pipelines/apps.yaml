apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: apps
  namespace: test-workloads
spec:
  resources:
    - name: releases
      type: git
  workspaces:
    - name: cluster
  params:
    - name: PROW_JOB_ID
      type: string
  tasks:
    - name: create-release
      taskRef:
        name: create-release
      workspaces:
        - name: cluster
          workspace: cluster
      resources:
        inputs:
          - name: releases
            resource: releases

    - name: create-cluster
      runAfter: [create-release]
      taskRef:
        name: create-cluster
      params:
        - name: release-id
          value: "$(tasks.create-release.results.release-id)"
      workspaces:
        - name: cluster
          workspace: cluster

    - name: wait-for-ready
      runAfter: [create-cluster]
      timeout: 1h0m0s
      taskRef:
        name: wait-for-ready
      workspaces:
        - name: cluster
          workspace: cluster

    - name: run-tests
      runAfter: [wait-for-ready]
      taskRef:
        name: apps
      workspaces:
        - name: cluster
          workspace: cluster

    - name: manage-sonobuoy-results
      runAfter: [run-tests]
      taskRef:
        name: manage-sonobuoy-results
      params:
        - name: kubeconfig-path
          value: $(workspaces.cluster.path)/kubeconfig
        - name: sonobuoy-namespace
          value: "$(tasks.create-cluster.results.cluster-id)-sonobuoy"
      workspaces:
        - name: cluster
          workspace: cluster

    - name: upload-to-s3-bucket
      runAfter: [manage-sonobuoy-results]
      taskRef:
        name: upload-to-s3-bucket
      params:
        - name: prow-job-id
          value: "$(params.PROW_JOB_ID)"
        - name: file-to-upload
          value: $(workspaces.cluster.path)/sonobuoy-results.tar
      workspaces:
        - name: cluster
          workspace: cluster

  finally:
    - name: cleanup
      taskRef:
        name: cleanup
      workspaces:
        - name: cluster
          workspace: cluster
