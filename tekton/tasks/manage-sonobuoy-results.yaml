apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: manage-sonobuoy-results
  namespace: test-workloads
spec:
  workspaces:
    - name: sonobuoy
      description: Sonobuoy results is stored here.
  params:
    - name: results-path
      type: string
      description: Path where results will be stored.
      default: "$(workspaces.sonobuoy.path)/sonobuoy-results.tar"
    - name: sonobuoy-namespace
      type: string
      description: Namespace that sonobuoy will create to store its resources.
      default: "sonobuoy"
    - name: kubeconfig
      type: string
      description: Kubeconfig of the created cluster.
  steps:
    - name: manage-sonobuoy-results
      image: quay.io/giantswarm/sonobuoy:v0.53.2-alpine-giantswarm
      script: |
        #! /bin/sh

        set -e
  
        echo $(params.kubeconfig) > /tmp/kubeconfig

        cleanup() {
          /sonobuoy delete --namespace "$(params.sonobuoy-namespace)" --kubeconfig /tmp/kubeconfig --all --wait || true
        }

        trap cleanup INT TERM EXIT

        /sonobuoy status --namespace "$(params.sonobuoy-namespace)" --kubeconfig /tmp/kubeconfig

        echo Retrieving logs...
        outfile=$(/sonobuoy retrieve --namespace "$(params.sonobuoy-namespace)" --kubeconfig /tmp/kubeconfig)
        echo Results saved to $outfile

        echo Results:
        /sonobuoy results "$outfile"
        /sonobuoy results "$outfile" --mode detailed

        mv "$outfile" "$(params.results-path)"

        if /sonobuoy status --namespace "$(params.sonobuoy-namespace)" --kubeconfig /tmp/kubeconfig | grep failed >/dev/null; then
          echo Found failed tests in sonobuoy status
          exit 1
        fi
