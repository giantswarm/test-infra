apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: manage-sonobuoy-results
  namespace: test-workloads
spec:
  workspaces:
    - name: cluster
      description: Cluster information is stored here.
  params:
    - name: kubeconfig-path
      type: string
      description: Kubeconfig path for the cluster where sonobuoy will run.
    - name: sonobuoy-namespace
      type: string
      description: Namespace that sonobuoy will create to store its resources.
      default: "sonobuoy"
  steps:
    - name: manage-sonobuoy-results
      image: sonobuoy/sonobuoy:v0.20.0
      env:
        - name: RESULTS_PATH
          value: $(workspaces.cluster.path)/sonobuoy-results.tar
      script: |
        #! /bin/sh

        set -e

        cleanup() {
          /sonobuoy delete --namespace "$(params.sonobuoy-namespace)" --kubeconfig "$(params.kubeconfig-path)" --all --wait || true
        }

        trap cleanup INT TERM EXIT

        /sonobuoy status --namespace "$(params.sonobuoy-namespace)" --kubeconfig "$(params.kubeconfig-path)"

        outfile=$(/sonobuoy retrieve --namespace "$(params.sonobuoy-namespace)" --kubeconfig "$(params.kubeconfig-path)")
        /sonobuoy results "$outfile"
        /sonobuoy results "$outfile" --mode detailed
        mv "$outfile" "${RESULTS_PATH}"

        if /sonobuoy status --namespace "$(params.sonobuoy-namespace)" --kubeconfig "$(params.kubeconfig-path)" | grep failed >/dev/null; then
          exit 1
        fi
      volumeMounts:
        - mountPath: /etc/kubeconfig
          name: kubeconfig
  volumes:
    - name: kubeconfig
      secret:
        secretName: sonobuoy-kubeconfig
