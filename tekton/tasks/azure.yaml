apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: azure
  namespace: test-workloads
spec:
  workspaces:
    - name: cluster
      description: Cluster information is stored here.
  params:
  - name: kubeconfig-path
    type: string
    description: Management Cluster kubeconfig path.
  - name: test-deletion
    type: string
    description: Whether or not test deletion of clusters.
    default: "1"
  steps:
    - name: download-sonobuoy-plugin
      image: busybox
      script: |
        #! /bin/sh
        wget -O $(workspaces.cluster.path)/giantswarm-plugin.yaml https://raw.githubusercontent.com/giantswarm/sonobuoy-plugin/master/giantswarm-plugin.yaml
    - name: run-tests
      image: quay.io/giantswarm/sonobuoy-alpine:0.0.0-234dc078a0eb416cf9343ff8097f23a8bd67debf
      env:
        - name: TC_KUBECONFIG_PATH
          value: $(workspaces.cluster.path)/kubeconfig
        - name: KUBECONFIG_PATH
          value: $(params.kubeconfig-path)
        - name: CLUSTER_ID_PATH
          value: $(workspaces.cluster.path)/cluster-id
        - name: PROVIDER
          value: azure
        - name: TEST_DELETION
          value: $(params.test-deletion)
      script: |
        #! /bin/sh
        /sonobuoy run \
            --kubeconfig "${KUBECONFIG_PATH}" \
            --namespace "$(cat "${CLUSTER_ID_PATH}")-sonobuoy" \
            --plugin $(workspaces.cluster.path)/giantswarm-plugin.yaml \
            --plugin-env giantswarm.TC_KUBECONFIG="$(cat "${TC_KUBECONFIG_PATH}")" \
            --plugin-env giantswarm.CP_KUBECONFIG="$(cat "${KUBECONFIG_PATH}")" \
            --plugin-env giantswarm.CLUSTER_ID="$(cat "${CLUSTER_ID_PATH}")" \
            --plugin-env giantswarm.PROVIDER="${PROVIDER}" \
            --plugin-env giantswarm.TEST_DELETION="${TEST_DELETION}" \
            --mode=certified-conformance \
            --wait
      volumeMounts:
        - mountPath: /etc/kubeconfig
          name: kubeconfig
  volumes:
    - name: kubeconfig
      secret:
        secretName: sonobuoy-kubeconfig
