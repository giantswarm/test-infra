apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: wait-for-condition-ready
  namespace: test-workloads
spec:
  volumes:
    - name: kubeconfig
      secret:
        secretName: standup-kubeconfig
  workspaces:
    - name: cluster
      description: Cluster information is stored here.
  steps:
    - name: wait-for-condition-ready
      image: quay.io/giantswarm/standup:2.5.0
      volumeMounts:
        - name: kubeconfig
          mountPath: /etc/kubeconfig
      script: |
        #! /bin/sh

        set -eo pipefail

        CLUSTER_NAMESPACE=$(kubectl --kubeconfig /etc/kubeconfig/azure get clusters -A | grep $(cat $(workspaces.cluster.path)/cluster-id) | awk '{print $1}')
        CLUSTER_ID=$(cat $(workspaces.cluster.path)/cluster-id)

        # Wait for the cluster to be ready
        while ! kubectl --kubeconfig /etc/kubeconfig/azure get clusters -n${CLUSTER_NAMESPACE} ${CLUSTER_ID} -o json | jq -e '.status.conditions[] | select(.type=="Ready" and .status=="True")'>/dev/null
        do
          echo "$(date): Cluster '${CLUSTER_ID}' is not Ready yet"
          sleep 10
        done

        echo "$(date): Cluster ${CLUSTER_ID} is Ready"

        # Wait for the cluster to be completely created
        while ! kubectl --kubeconfig /etc/kubeconfig/azure get clusters -n${CLUSTER_NAMESPACE} ${CLUSTER_ID} -o json | jq -e '.status.conditions[] | select(.type=="Creating" and .status=="False")'>/dev/null
        do
          echo "$(date): Cluster '${CLUSTER_ID}' is still creating"
          sleep 10
        done

        echo "$(date): Cluster ${CLUSTER_ID} has finished creating"
