apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: upgrade-cluster
  namespace: test-workloads
spec:
  volumes:
    - name: kubeconfig
      secret:
        secretName: standup-kubeconfig
  workspaces:
  - name: cluster
    description: Cluster information is stored here.
  params:
  - name: cluster-id
    type: string
    description: Cluster ID for the cluster that will be upgraded.
  - name: kubeconfig-path
    type: string
    description: Kubeconfig path for the cluster where sonobuoy will run.
  - name: release-id
    type: string
    description: Release ID that the cluster will be upgraded to.
  steps:
  - name: upgrade-cluster
    image: quay.io/giantswarm/standup:2.6.0
    volumeMounts:
    - name: kubeconfig
      mountPath: /etc/kubeconfig
    script: |
      #! /bin/sh

      set -eo pipefail

      CLUSTER_NAMESPACE=$(kubectl --kubeconfig $(params.kubeconfig-path) get clusters -A | grep $(params.cluster-id) | awk '{print $1}')

      echo "$(date): Upgrading cluster $(params.cluster-id) to $(params.release-id)"
      RELEASE_ID="$(params.release-id)"
      # Remove initial "v" from RELEASE_ID
      release="$(echo "${RELEASE_ID#"v"}")"

      # Update cluster label to trigger upgrade
      kubectl --kubeconfig $(params.kubeconfig-path) -n${CLUSTER_NAMESPACE} patch cluster/$(params.cluster-id) -p "{\"metadata\":{\"labels\":{\"release.giantswarm.io/version\": \"${release}\"}}}" --type=merge

      # Wait for the operator to pick up the change and start upgrading
      while ! kubectl --kubeconfig $(params.kubeconfig-path) get clusters -n${CLUSTER_NAMESPACE} $(params.cluster-id) -o json | jq -e '.status.conditions[] | select(.type=="Upgrading" and .status=="True")'>/dev/null
      do
        echo "$(date): Cluster '$(params.cluster-id)' is not Upgrading yet"
        sleep 10
      done

      # Wait for the upgrade to finish
      while ! kubectl --kubeconfig $(params.kubeconfig-path) get clusters -n${CLUSTER_NAMESPACE} $(params.cluster-id) -o json | jq -e '.status.conditions[] | select(.type=="Upgrading" and .status=="False")'>/dev/null
      do
        echo "$(date): Cluster $(params.cluster-id) is still upgrading"
        sleep 10
      done

