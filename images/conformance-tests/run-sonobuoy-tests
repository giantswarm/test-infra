#! /bin/sh
set -e

kubeconfig_path="${KUBECONFIG_PATH:-"/cluster/kubeconfig"}"

function log {
  echo "[$(date -u +%FT%TZ)]" "$@"
}

function wait_for_cluster_ready {
    # Check cluster info and wait for Kubernetes master and CoreDNS are running
    # kubectl has colorized output, so need to strip the color codes in order to grep. From https://stackoverflow.com/a/18000433
    until kubectl --kubeconfig="$kubeconfig_path" cluster-info | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g" | grep -q "Kubernetes master is running"; do
        log "waiting for tenant cluster master to be ready"
        sleep 30s
    done
    log "tenant cluster kubernetes master is up"

    until kubectl --kubeconfig="$kubeconfig_path" cluster-info | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g" | grep -q "CoreDNS is running"; do
        log "waiting for tenant cluster CoreDNS to start"
        sleep 30s
    done
    log "tenant cluster coredns is up"
}

function run_cis {
  log "Running cis"
  sonobuoy run  \
    --kubeconfig "$kubeconfig_path" \
    --plugin https://raw.githubusercontent.com/vmware-tanzu/sonobuoy-plugins/master/cis-benchmarks/kube-bench-plugin.yaml \
    --plugin https://raw.githubusercontent.com/vmware-tanzu/sonobuoy-plugins/master/cis-benchmarks/kube-bench-master-plugin.yaml \
    --plugin-env kube-bench-master.KUBERNETES_VERSION=1.16 --plugin-env kube-bench-node.KUBERNETES_VERSION=1.16 \
    --wait
}

function run_cncf {
  log "Running cncf"
  sonobuoy run --kubeconfig "$kubeconfig_path" --mode=certified-conformance --wait
}

function cleanup {
  log "Deleting sonobuoy resources"
  sonobuoy delete --kubeconfig "$kubeconfig_path"  --all --wait || true
}

trap cleanup INT TERM EXIT

case "$1" in
  cis)
    wait_for_cluster_ready
    run_cis
    ;;
  cncf)
    wait_for_cluster_ready
    run_cncf
    ;;
  *)
    log "Unknown test mode: $1"
    exit 1
    ;;
esac


sonobuoy status --kubeconfig "$kubeconfig_path"

outfile=$(sonobuoy retrieve --kubeconfig "$kubeconfig_path")

log "Results summary"
sonobuoy results "$outfile"

log "Detailed results"
sonobuoy results "$outfile" --mode detailed | jq .
