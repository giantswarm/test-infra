apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: prowjobs.prow.k8s.io
  namespace: prow
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.job
    description: The name of the job being run.
    name: Job
    type: string
  - JSONPath: .status.build_id
    description: The ID of the job being run.
    name: BuildId
    type: string
  - JSONPath: .spec.type
    description: The type of job being run.
    name: Type
    type: string
  - JSONPath: .spec.refs.org
    description: The org for which the job is running.
    name: Org
    type: string
  - JSONPath: .spec.refs.repo
    description: The repo for which the job is running.
    name: Repo
    type: string
  - JSONPath: .spec.refs.pulls[*].number
    description: The pulls for which the job is running.
    name: Pulls
    type: string
  - JSONPath: .status.startTime
    description: When the job started running.
    name: StartTime
    type: date
  - JSONPath: .status.completionTime
    description: When the job finished running.
    name: CompletionTime
    type: date
  - JSONPath: .status.state
    description: The state of the job.
    name: State
    type: string
  group: prow.k8s.io
  names:
    kind: ProwJob
    plural: prowjobs
    singular: prowjob
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            max_concurrency:
              minimum: 0
              type: integer
            type:
              enum:
              - presubmit
              - postsubmit
              - periodic
              - batch
              type: string
        status:
          anyOf:
          - not:
              properties:
                state:
                  enum:
                  - success
                  - failure
                  - error
                  type: string
          - required:
            - completionTime
          properties:
            state:
              enum:
              - triggered
              - pending
              - success
              - failure
              - aborted
              - error
              type: string
  version: v1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: crier
  namespace: prow
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: crier
  namespace: nightly
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - events
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: crier
  namespace: prow
rules:
- apiGroups:
  - prow.k8s.io
  resources:
  - prowjobs
  verbs:
  - get
  - watch
  - list
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: crier-namespaced
  namespace: nightly
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: crier
subjects:
- kind: ServiceAccount
  name: crier
  namespace: prow
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: crier-namespaced
  namespace: prow
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: crier
subjects:
- kind: ServiceAccount
  name: crier
  namespace: prow
---
apiVersion: v1
data:
  configs.yaml: |
    log_level: info

    pod_namespace: nightly

    prowjob_namespace: prow

    # Report job status for presubmit and postsubmit
    github_reporter:
      job_types_to_report:
        - presubmit
        - postsubmit

    deck:
      external_agent_logs:
        - agent: tekton-pipeline
          url_template: 'http://log-aggregator:8000/logs/{{.ObjectMeta.Name}}'

    presubmits:
      giantswarm/releases:
      - name: cis
        agent: tekton-pipeline
        max_concurrency: 3
        always_run: false
        skip_report: false
        pipeline_run_spec:
          pipelineRef:
            name: cis
          serviceAccountName: releases
          resources:
          - name: releases
            resourceRef:
              name: PROW_IMPLICIT_GIT_REF
          workspaces:
          - name: cluster
            volumeClaimTemplate:
              spec:
                accessModes:
                - ReadWriteOnce
                resources:
                  requests:
                    storage: 10Mi
        trigger: "/test cis"
        rerun_command: "/test cis"
      - name: cncf
        agent: tekton-pipeline
        max_concurrency: 3
        always_run: false
        skip_report: false
        pipeline_run_spec:
          pipelineRef:
            name: cncf
          serviceAccountName: releases
          timeout: 5h0m0s
          resources:
          - name: releases
            resourceRef:
              name: PROW_IMPLICIT_GIT_REF
          workspaces:
          - name: cluster
            volumeClaimTemplate:
              spec:
                accessModes:
                - ReadWriteOnce
                resources:
                  requests:
                    storage: 10Mi
        trigger: "/test cncf"
        rerun_command: "/test cncf"
      - name: aws
        agent: tekton-pipeline
        max_concurrency: 3
        always_run: false
        skip_report: false
        pipeline_run_spec:
          pipelineRef:
            name: aws
          serviceAccountName: releases
          resources:
            - name: releases
              resourceRef:
                name: PROW_IMPLICIT_GIT_REF
          workspaces:
            - name: cluster
              volumeClaimTemplate:
                spec:
                  accessModes:
                    - ReadWriteOnce
                  resources:
                    requests:
                      storage: 10Mi
        trigger: "/test aws"
        rerun_command: "/test aws"
kind: ConfigMap
metadata:
  annotations: {}
  labels: {}
  name: prowconfig
  namespace: prow
---
apiVersion: v1
data:
  plugins.yaml: |
    plugins:
      giantswarm/test-infra:
      - config-updater
      giantswarm:
      - dog
      - trigger
kind: ConfigMap
metadata:
  annotations: {}
  labels: {}
  name: prowplugins
  namespace: prow
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: crier
  name: crier
  namespace: prow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crier
  template:
    metadata:
      labels:
        app: crier
    spec:
      containers:
      - args:
        - --github-workers=5
        - --config-path=/etc/config/configs.yaml
        - --github-endpoint=http://ghproxy
        - --github-endpoint=https://api.github.com
        - --github-token-path=/etc/github/oauth
        image: gcr.io/k8s-prow/crier:v20200813-535fb53bd1
        name: crier
        volumeMounts:
        - mountPath: /etc/config
          name: configs
          readOnly: true
        - mountPath: /etc/github
          name: oauth
          readOnly: true
      serviceAccountName: crier
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          name: prowconfig
        name: configs
      - name: oauth
        secret:
          secretName: oauth-token
